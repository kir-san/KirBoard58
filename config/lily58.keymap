/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp GRAVE>;
        };

        soft_off {
            timeout-ms = <59>;
            key-positions = <42 43>;
            bindings = <&soft_off>;
        }
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE      &kp N1  &kp N2  &kp N3        &kp N4  &kp N5                              &kp N6  &kp N7   &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB         &kp Q   &kp W   &kp E         &kp R   &kp T                               &kp Y   &kp U    &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A   &kp S   &kp D         &kp F   &kp G                               &kp H   &kp J    &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z   &kp X   &kp C         &kp V   &kp B         &mo 3        &mo 4    &kp N   &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSPACE
                                &kp LEFT_WIN  &mo 2   &kp LEFT_ALT  &kp SPACE    &kp RET  &mo 1   &kp DEL  &kp K_APP
            >;
        };

        control_layer {
            bindings = <
&kp ESC  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                             &kp F6  &kp F7        &kp F8      &kp F9         &kp F10    &kp EQUAL
&trans   &none   &none   &none   &none   &none                              &none   &kp LC(LEFT)  &kp UP      &kp LC(RIGHT)  &kp PG_UP  &kp RIGHT_BRACKET
&trans   &none   &trans  &none   &none   &none                              &none   &kp LEFT      &kp DOWN    &kp RIGHT      &kp ENTER  &kp BACKSLASH
&trans   &trans  &trans  &trans  &trans  &none   &none     &kp PRINTSCREEN  &trans  &kp HOME      &kp DELETE  &kp END        &kp PG_DN  &kp BACKSPACE
                         &trans  &trans  &trans  &trans    &trans           &trans  &none         &none
            >;

            label = "conrol";
        };

        additional {
            bindings = <
&none   &none  &none  &none   &none  &none                     &kp KP_LEFT_PARENTHESIS  &kp KP_RIGHT_PARENTHESIS  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_MINUS  &none
&trans  &none  &none  &none   &none  &none                     &none                    &kp N7                    &kp N8         &kp N9           &kp KP_PLUS   &none
&trans  &none  &none  &none   &none  &none                     &none                    &kp N4                    &kp N5         &kp N6           &kp KP_PLUS   &none
&trans  &none  &none  &none   &none  &none   &none     &none   &none                    &kp N1                    &kp N2         &kp N3           &kp KP_EQUAL  &trans
                      &trans  &none  &trans  &trans    &trans  &kp KP_N0                &kp KP_DOT                &kp KP_COMMA
            >;
        };

        system {
            bindings = <
&bootloader  &none         &none         &none         &none         &bt BT_CLR_ALL                  &kp C_BRI_UP  &none  &none  &none  &none  &none
&none        &none         &none         &none         &none         &bt BT_CLR                      &kp C_BRI_DN  &none  &none  &none  &none  &none
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &none         &none  &none  &none  &none  &none
&none        &none         &none         &none         &none         &none           &none    &none  &none         &none  &none  &none  &none  &trans
                                         &none         &none         &none           &none    &none  &none         &none  &none
            >;
        };

        media {
            bindings = <
&none  &none  &none  &none  &none  &none                                &kp C_VOLUME_UP       &kp LS(LA(LC(KP_PLUS)))   &none                  &none  &none  &bootloader
&none  &none  &none  &none  &none  &none                                &kp C_VOLUME_DOWN     &kp LS(LA(LC(KP_MINUS)))  &none                  &none  &none  &none
&none  &none  &none  &none  &none  &none                                &kp C_PREV            &kp C_MUTE                &kp C_NEXT             &none  &none  &none
&none  &none  &none  &none  &none  &none  &none    &none                &kp LS(LC(LA(LEFT)))  &kp C_PLAY_PAUSE          &kp LS(LA(LC(RIGHT)))  &none  &none  &kp LS(LA(LC(BACKSPACE)))
                     &none  &none  &none  &none    &kp LS(LC(LA(DEL)))  &none                 &none                     &none
            >;
        };
    };
};
